<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[【设计模式】策略模式]]></title>
    <url>%2F2019%2F07%2F03%2Fdesign-pattern%2Fstrategy%2F</url>
    <content type="text"><![CDATA[策略模式 &emsp;&emsp;定义了一系列算法，并将每一个算法封装起来，使得每个算法都可以相互替代，使算法本身和使用算法的客户端互相独立。 分离算法,选择实现 体现开闭原则，里氏替换原则 策略模式是一个扁平的结构，各个策略实现都是兄弟关系，实现了同一个接口或者继承了同一个抽象类，这样只要使用策略的客户端保持面向抽象编程，就可以动态的切换不同的策略实现以进行替换。]]></content>
      <categories>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
        <tag>策略模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【设计模式】命令行模式]]></title>
    <url>%2F2019%2F07%2F03%2Fdesign-pattern%2Fcommand-line%2F</url>
    <content type="text"><![CDATA[命令行模式 解决命令行的请求者和命令的实现之间的耦合关系 1.更方便对命令进行拓展2.对多个命令统一控制 将一个请求封装位一个对象，使发出请求的责任和执行请求的责任分割开。这样两者宅男通过命令对象进行沟通，这样方便将命令对象进行存储，传递，调用，增加与管理 抽象命令,具体命令角色实现者/接受者调用者/请求者]]></content>
      <categories>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
        <tag>命令行模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【设计模式】代理模式]]></title>
    <url>%2F2019%2F07%2F03%2Fdesign-pattern%2Fproxy%2F</url>
    <content type="text"><![CDATA[代理模式 偏重因自己无法完成或者自己无需关心，需要他人干涉时间流程，更多的是对对象的控制。注重对对象某一功能把控和辅助。他可以控制对象做某些事，重心事为了借用对象的功能完成某一流程，而非对象功能如何。 装饰者模式 偏重对原对象功能的扩展，扩展后的对象仍是对象本身。注重对对象的功能拓展，他不关系外界如何调用，只注重对对象功能的加强，装饰后哈市对象本身。]]></content>
      <categories>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
        <tag>代理模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[springCloud学习笔记]]></title>
    <url>%2F2019%2F07%2F03%2Fjava%2FspringCloud%2Findex%2F</url>
    <content type="text"><![CDATA[springCloud 服务注册与发现（Eureka） 服务消费者（ribbon + feign) 断路器（hystrix) 路由网关（zuul / gateway) 分布式配置中心 (config) 消息总线 (bus) 服务链路追踪 (sleuth)]]></content>
      <categories>
        <category>springCloud</category>
      </categories>
      <tags>
        <tag>springCloud</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>%2F2019%2F07%2F03%2Fdesign-pattern%2Fdecorator%2F</url>
    <content type="text"></content>
  </entry>
</search>
